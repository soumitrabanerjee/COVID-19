[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 11.0.8)
[debug]       Load.loadUnit: plugins took 206.9911ms
[debug]       Load.loadUnit: defsScala took 0.383ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 41.524 ms
[debug]           Load.resolveProject(global-plugins) took 84.7253ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 176.1608ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 209.17ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5294ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 429.1462ms
[debug]   Load.apply: load took 700.3517ms
[debug]   Load.apply: resolveProjects took 7.6303ms
[debug]   Load.apply: finalTransforms took 90.1487ms
[debug]   Load.apply: config.delegates took 11.011ms
[debug]   Load.apply: Def.make(settings)... took 1169.3002ms
[debug]   Load.apply: structureIndex took 168.6296ms
[debug]   Load.apply: mkStreams took 2.6626ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5192.8576ms
[debug]           Load.loadUnit: plugins took 58.6236ms
[debug]           Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\spark-test\COVID-19\project
[debug]             Load.loadUnit: mkEval took 11.9948ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\spark-test\COVID-19\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.935 ms
[info] loading settings for project covid-19-build from idea.sbt ...
[debug]               Load.resolveProject(covid-19-build) took 3.2679ms
[debug]             Load.loadTransitive: finalizeProject(Project(id covid-19-build, base: C:\Users\user\Desktop\spark-test\COVID-19\project, plugins: List(<none>))) took 6.7982ms
[debug] [Loading] Done in C:\Users\user\Desktop\spark-test\COVID-19\project, returning: (covid-19-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 268.0177ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.4054ms
[debug]         Load.loadUnit(file:/C:/Users/user/Desktop/spark-test/COVID-19/project/, ...) took 334.5559ms
[debug]       Load.apply: load took 337.1189ms
[debug]       Load.apply: resolveProjects took 0.158ms
[debug]       Load.apply: finalTransforms took 15.5925ms
[debug]       Load.apply: config.delegates took 0.532ms
[debug]       Load.apply: Def.make(settings)... took 128.8534ms
[debug]       Load.apply: structureIndex took 46.6254ms
[debug]       Load.apply: mkStreams took 0.005ms
[info] loading project definition from C:\Users\user\Desktop\spark-test\COVID-19\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1234.0935ms
[debug]     Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\spark-test\COVID-19
[debug]       Load.loadUnit: mkEval took 0.6223ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\spark-test\COVID-19, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.5165 ms
[info] loading settings for project covid-19 from build.sbt ...
[debug]         Load.resolveProject(covid-19) took 114.9058ms
[debug]       Load.loadTransitive: finalizeProject(Project(id covid-19, base: C:\Users\user\Desktop\spark-test\COVID-19, plugins: List(<none>))) took 127.9138ms
[debug] [Loading] Done in C:\Users\user\Desktop\spark-test\COVID-19, returning: (covid-19)
[debug]     Load.loadUnit: loadedProjectsRaw took 254.9177ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.5232ms
[debug]   Load.loadUnit(file:/C:/Users/user/Desktop/spark-test/COVID-19/, ...) took 1500.5583ms
[debug] Load.apply: load took 1503.7412ms
[debug] Load.apply: resolveProjects took 0.1889ms
[debug] Load.apply: finalTransforms took 55.8162ms
[debug] Load.apply: config.delegates took 0.4948ms
[debug] Load.apply: Def.make(settings)... took 127.0068ms
[debug] Load.apply: structureIndex took 46.7723ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to COVID-19 (in build file:/C:/Users/user/Desktop/spark-test/COVID-19/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50488 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50488, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to COVID-19 (in build file:/C:/Users/user/Desktop/spark-test/COVID-19/)
[debug] > Exec(idea-shell, None, None)
